replicas: 1
revisionHistoryLimit: 5
metricsPath: /
servicePort: 8080
serviceScheme: HTTP
deploymentStrategy: RollingUpdate
terminationGracePeriodSeconds: 30
ingress:
  enabled: true
  path: /
autoscaling:
  enabled: false
  maxReplicas: 3
  targetCPUUtilizationPercentage: 85
resources:
  limits:
    cpu: 1
    memory: 500Mi
  requests:
    cpu: 200m
    memory: 250Mi
environmentVariables:

  quarkus.kafka-streams.bootstrap-servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
  quarkus.kafka-streams.security.protocol: SASL_PLAINTEXT
  quarkus.kafka-streams.sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username='<Kafka username>' password='<Kafka user password>';
  quarkus.kafka-streams.sasl.mechanism: SCRAM-SHA-512
  mp.messaging.outgoing.kafka.bootstrap.servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
  mp.messaging.outgoing.kafka-empty.bootstrap.servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
  mp.messaging.connector.smallrye-kafka.security.protocol: SASL_PLAINTEXT
  mp.messaging.connector.smallrye-kafka.sasl.mechanism: SCRAM-SHA-512
  mp.messaging.connector.smallrye-kafka.sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username='<Kafka username>' password='<Kafka user password>';
  kafka.bootstrap.servers: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
  kafka.group.id: bmw.cloud.vehiclemockorderproducer
  kafka.client.id: bmw.cloud.vehiclemockorderproducer.${HOSTNAME}

environmentSecrets:
  KAFKA_KEY:
    secret_name: kafka-key
  KAFKA_SECRET:
    secret_name: kafka-secret

image:
  tag: latest
  url: dweuttdblueacr.azurecr.io/bmw.cloudadoption.vehiclemockorder-java